[1mdiff --git a/app/public/index.html b/app/public/index.html[m
[1mindex c7642a3..8263b17 100644[m
[1m--- a/app/public/index.html[m
[1m+++ b/app/public/index.html[m
[36m@@ -13,15 +13,5 @@[m
   <body>[m
     <noscript>You need to enable JavaScript to run this app.</noscript>[m
     <div id="root"></div>[m
[31m-    <!--[m
[31m-      This HTML file is a template.[m
[31m-      If you open it directly in the browser, you will see an empty page.[m
[31m-[m
[31m-      You can add webfonts, meta tags, or analytics to this file.[m
[31m-      The build step will place the bundled scripts into the <body> tag.[m
[31m-[m
[31m-      To begin the development, run `npm start` or `yarn start`.[m
[31m-      To create a production bundle, use `npm run build` or `yarn build`.[m
[31m-    -->[m
   </body>[m
 </html>[m
[1mdiff --git a/app/src/App.js b/app/src/App.js[m
[1mindex 0264ee6..0d120d5 100644[m
[1m--- a/app/src/App.js[m
[1m+++ b/app/src/App.js[m
[36m@@ -4,6 +4,8 @@[m [mimport {BrowserRouter, Route, Switch} from "react-router-dom";[m
 import Homepage from "./components/Homepage";[m
 import Snippet from "./components/Snippet";[m
 import Error from "./components/Error";[m
[32m+[m[32mimport AdminHomepage from "./components/AdminHomepage";[m
[32m+[m[32mimport AdminMainPage from "./components/AdminMainPage";[m
 [m
 class App extends Component {[m
     render() {[m
[36m@@ -13,6 +15,8 @@[m [mclass App extends Component {[m
                     <Switch>[m
                         <Route path="/" component={Homepage} exact/>[m
                         <Route path="/snippet" component={Snippet} exact/>[m
[32m+[m[32m                        <Route path="/admin" component={AdminHomepage} exact/>[m
[32m+[m[32m                        <Route path="/main" component={AdminMainPage} exact/>[m
                         <Route component={Error}/>[m
                     </Switch>[m
                 </div>[m
[1mdiff --git a/app/src/components/AdminHomepage.js b/app/src/components/AdminHomepage.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3541c3c[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/AdminHomepage.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mimport React, {Component} from "react";[m
[32m+[m[32mimport './AdminStyles.css';[m
[32m+[m[32mimport { Button} from "reactstrap";[m
[32m+[m
[32m+[m[32mclass AdminHomepage extends Component{[m
[32m+[m[32m    // constructor(props) {[m
[32m+[m[32m    //     super(props);[m
[32m+[m[32m    // }[m
[32m+[m
[32m+[m[32m    render() {[m
[32m+[m[32m        return([m
[32m+[m[32m            <div id="AdminPage">[m
[32m+[m[32m                <h1 className="page-title">Welcome Administrator</h1>[m
[32m+[m[32m                <div class="form-container">[m
[32m+[m[32m                    <input class="input-container" type="text" required/>[m
[32m+[m[32m                    <label class="input-label">[m
[32m+[m[32m                        <span class="input-name">Password</span>[m
[32m+[m[32m                    </label>[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <div class="button-container">[m
[32m+[m[32m                <Button id="pass-button" outline color="primary">Hello</Button>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default AdminHomepage;[m
\ No newline at end of file[m
[1mdiff --git a/app/src/components/AdminMainPage.js b/app/src/components/AdminMainPage.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e4e76e6[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/AdminMainPage.js[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mimport React, {Component} from "react";[m
[32m+[m
[32m+[m[32mclass AdminMainPage extends Component{[m
[32m+[m[32m    constructor(props) {[m
[32m+[m[32m        super(props);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    render() {[m
[32m+[m[32m        return([m
[32m+[m[32m            <div>[m
[32m+[m
[32m+[m[32m            </div>[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default AdminMainPage;[m
\ No newline at end of file[m
[1mdiff --git a/app/src/components/AdminStyles.css b/app/src/components/AdminStyles.css[m
[1mnew file mode 100644[m
[1mindex 0000000..5275488[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/AdminStyles.css[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32m#AdminPage{[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    height: 100vh;[m
[32m+[m[32m    background-color: white;[m
[32m+[m[32m    justify-content: space-around;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m    font-family: sans-serif;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.page-title {[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    left: 0;[m
[32m+[m[32m    top: 10%;[m
[32m+[m[32m    padding: 5px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.form-container{[m
[32m+[m[32m    width: 15%;[m
[32m+[m[32m    position: relative;[m
[32m+[m[32m    height: 60px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.input-container {[m
[32m+[m[32m    height: 100%;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    color: slategrey;[m
[32m+[m[32m    font-size: 20px;[m
[32m+[m[32m    padding-top: 20px;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    outline: none;[m
[32m+[m[32m    transition: 0.8s;[m
[32m+[m[32m    border-bottom: 3px solid black;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.input-label{[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    left: 0;[m
[32m+[m[32m    bottom: 0;[m
[32m+[m[32m    font-size: 20px;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    height: 100%;[m
[32m+[m[32m    pointer-events: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.input-container:hover{[m
[32m+[m[32m    border-bottom: 3px solid royalblue;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.input-name{[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    bottom: 0;[m
[32m+[m[32m    left: 0;[m
[32m+[m[32m    color: lightgrey;[m
[32m+[m[32m    font-weight: bold;[m
[32m+[m[32m    transition: 0.3s;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.form-container .input-container:focus + .input-label .input-name,[m
[32m+[m[32m.form-container .input-container:valid +.input-label .input-name{[m
[32m+[m[32m    transform: translateY(-90%);[m
[32m+[m[32m    color: royalblue;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m#pass-button{[m
[32m+[m[32m    width: 200px;[m
[32m+[m[32m    left: 100px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.button-container{[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    justify-content: center;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    bottom: 25%;[m
[32m+[m[32m    left: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media only screen and (max-width: 576px) {[m
[32m+[m[32m    .form-container {[m
[32m+[m[32m        width: 50%;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/app/src/components/CommentList.js b/app/src/components/CommentList.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a7b6cf7[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/CommentList.js[m
[36m@@ -0,0 +1,192 @@[m
[32m+[m[32mimport React, { Component } from "react";[m
[32m+[m[32mimport { Card, CardTitle } from 'reactstrap';[m
[32m+[m[32mimport {callLambda, sanitizeText} from "./Utilities";[m
[32m+[m
[32m+[m[32mconst url = "https://22qzx6fqi8.execute-api.us-east-1.amazonaws.com/First/comments/"[m
[32m+[m
[32m+[m[32mclass CommentList extends Component {[m
[32m+[m
[32m+[m[32m    constructor(props){[m
[32m+[m[32m        super(props);[m
[32m+[m
[32m+[m[32m        this.state = {[m
[32m+[m[32m            snippetID: props.snipID,[m
[32m+[m[32m            commentList: [],[m
[32m+[m[32m            commentCardList: [],[m
[32m+[m[32m            numComment: 0,[m
[32m+[m[32m            commentInProgress: false,[m
[32m+[m
[32m+[m[32m            startSelection: 0,[m
[32m+[m[32m            endSelection: 0,[m
[32m+[m[32m            newComText: "",[m
[32m+[m
[32m+[m[32m            loadCommentInterval: 5000,[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        this.addComment = this.addComment.bind(this);[m
[32m+[m[32m        this.submitComment = this.submitComment.bind(this);[m
[32m+[m[32m        this.cancelComment = this.cancelComment.bind(this);[m
[32m+[m[32m        this.loadComments = this.loadComments.bind(this);[m
[32m+[m
[32m+[m[32m        this.newComUpdate = this.newComUpdate.bind(this);[m
[32m+[m[32m    }[m
[32m+[m[41m   [m
[32m+[m[32m    componentDidMount(){[m
[32m+[m
[32m+[m[32m        // GET COMMENTS[m
[32m+[m
[32m+[m[32m        this.loadComments();[m
[32m+[m
[32m+[m[32m        let extThis = this;[m
[32m+[m[32m        // Load comments on set interval[m
[32m+[m[32m        setInterval(function() {[m
[32m+[m[32m            if(!extThis.state.commentInProgress) {[m
[32m+[m[32m                extThis.loadComments();[m
[32m+[m[32m            }[m
[32m+[m[32m        }, extThis.state.loadCommentInterval);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Add comment by clicking on the 'comment' button[m
[32m+[m[32m    addComment(event) {[m
[32m+[m[32m        if (this.state.commentInProgress) {[m
[32m+[m[32m            window.alert("Submit or cancel current comment before creating new one");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            let ace = document.getElementById("ace-editor");[m
[32m+[m[32m            let start = ace.env.editor.selection.anchor.row + 1;[m
[32m+[m[32m            let end = ace.env.editor.selection.cursor.row + 1;[m
[32m+[m
[32m+[m[32m            if (start > end) {[m
[32m+[m[32m                let temp = start;[m
[32m+[m[32m                start = end;[m
[32m+[m[32m                end = temp;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            const c = ([m
[32m+[m[32m                <Card key="comInProg" id="comInProg" body inverse color="success">[m
[32m+[m[32m                    <p>Selected Lines: {start + ", " + end}</p>[m
[32m+[m[32m                    <textarea onChange={this.newComUpdate}></textarea>[m
[32m+[m[32m                    <div id="newComDiv">[m
[32m+[m[32m                        <button onClick={this.submitComment}>Submit Comment</button>[m
[32m+[m[32m                        <button id="cancelButt" onClick={this.cancelComment}>Cancel Comment</button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </Card>[m
[32m+[m[32m            );[m
[32m+[m
[32m+[m[32m            // thank you react, very cool[m
[32m+[m[32m            this.setState({[m
[32m+[m[32m                commentInProgress: true,[m
[32m+[m[32m            }, () => {[m
[32m+[m[32m               this.setState({[m
[32m+[m[32m                    commentCardList: this.state.commentCardList.concat(c),[m
[32m+[m[32m                    startSelection: start,[m
[32m+[m[32m                    endSelection: end,[m
[32m+[m[32m                });[m
[32m+[m[32m            });[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    cancelComment(event) {[m
[32m+[m[32m        this.setState({[m
[32m+[m[32m            commentInProgress: false,[m
[32m+[m[32m            commentCardList: this.state.commentCardList[m
[32m+[m[32m                .filter(x => x.props.id !== "comInProg"),[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    submitComment(event) {[m
[32m+[m[32m        let extThis = this;[m
[32m+[m
[32m+[m[32m        let data = {};[m
[32m+[m[32m        data["snippetID"] = this.state.snippetID;[m
[32m+[m[32m        data["text"] = sanitizeText(this.state.newComText);[m
[32m+[m[32m        data["regionStart"] = this.state.startSelection;[m
[32m+[m[32m        data["regionEnd"] = this.state.endSelection;[m
[32m+[m
[32m+[m[32m        callLambda(extThis, url, "POST", data)[m
[32m+[m[32m            .then(response => {[m
[32m+[m[32m                // this.setState({[m
[32m+[m[32m                //     commentCardList: [],[m
[32m+[m[32m                // })[m
[32m+[m[32m                extThis.loadComments();[m
[32m+[m[32m            })[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
[32m+[m
[32m+[m[32m        this.setState({[m
[32m+[m[32m            commentInProgress: false,[m
[32m+[m[32m            startSelection: 0,[m
[32m+[m[32m            endSelection: 0,[m
[32m+[m[32m            newComText: "",[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // ----------------------- LOAD COMMENTS FROM REQUEST ---------------------[m
[32m+[m
[32m+[m[32m    // Function to load comments on GUI given a input list (TODO: Make it work onload of document and heartbeat?)[m
[32m+[m[32m    loadComments(event){[m
[32m+[m[32m        console.log("Loading comments ...");[m
[32m+[m
[32m+[m[32m        let extThis = this;[m
[32m+[m[32m        const commentURl = url + "listCommentsBySnippet"[m
[32m+[m[32m        let data = {};[m
[32m+[m[32m        data["snippetID"] = this.state.snippetID;[m
[32m+[m
[32m+[m[32m        callLambda(this, commentURl, "POST", data)[m
[32m+[m[32m            .then(response => {[m
[32m+[m[32m                let idArray = this.state.commentList.map((comment) => comment.ID);[m
[32m+[m
[32m+[m[32m                let newArray = response["comments"].filter((comment) => {[m
[32m+[m[32m                    if (!idArray.includes(comment.ID)) {[m
[32m+[m[32m                        return comment;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return null;[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m                newArray.sort((a, b) => ((a.regionStart + a.regionEnd) > (b.regionStart + b.regionEnd)) ? 1:-1);[m
[32m+[m
[32m+[m[32m                let c = newArray.map(function(comment){[m
[32m+[m[32m                    let timestampNum = comment.timestamp;[m
[32m+[m[32m                    let unixDate = new Date(timestampNum);[m
[32m+[m
[32m+[m[32m                    return([m
[32m+[m[32m                        <Card key={comment.ID} id={comment.ID} body inverse color="success">[m
[32m+[m[32m                            <CardTitle>Time: {unixDate.toLocaleString()}</CardTitle>[m
[32m+[m[32m                            <p> Selected Lines: {comment.regionStart + ", " + comment.regionEnd} </p>[m
[32m+[m[32m                            <textarea readOnly="readonly">{comment.text}</textarea>[m
[32m+[m[32m                        </Card>[m
[32m+[m[32m                    )[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m                extThis.setState({[m
[32m+[m[32m                    commentList: this.state.commentList.concat(newArray),[m
[32m+[m[32m                    commentCardList: this.state.commentCardList.concat(c)[m
[32m+[m[32m                        .filter(x => x.props.id !== "comInProg"),[m
[32m+[m[32m                });[m
[32m+[m
[32m+[m[32m            })[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    newComUpdate(event) {[m
[32m+[m[32m        this.setState({[m
[32m+[m[32m            newComText: event.target.value,[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    render(){[m
[32m+[m[32m        return([m
[32m+[m[32m            <>[m
[32m+[m[32m                <div id="commentArea">[m
[32m+[m[32m                    {this.state.commentCardList}[m
[32m+[m[32m                </div>[m
[32m+[m[32m                <button onClick={this.addComment}>Add Comment</button>[m
[32m+[m[32m            </>[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default CommentList;[m
\ No newline at end of file[m
[1mdiff --git a/app/src/components/Error.js b/app/src/components/Error.js[m
[1mindex 8df3bae..2a31d30 100644[m
[1m--- a/app/src/components/Error.js[m
[1m+++ b/app/src/components/Error.js[m
[36m@@ -2,8 +2,10 @@[m [mimport React from 'react';[m
 [m
 function Error() {[m
     return ([m
[31m-        <div>[m
[31m-            <p>Error: Page does not exist!</p>[m
[32m+[m[32m        <div id="errorpage">[m
[32m+[m[32m            <div id="mainContainer">[m
[32m+[m[32m                <p>Error: Page does not exist!</p>[m
[32m+[m[32m            </div>[m
         </div>[m
     );[m
 }[m
[1mdiff --git a/app/src/components/Homepage.js b/app/src/components/Homepage.js[m
[1mindex 1bf03a9..56deb2d 100644[m
[1m--- a/app/src/components/Homepage.js[m
[1m+++ b/app/src/components/Homepage.js[m
[36m@@ -1,8 +1,5 @@[m
 import React, {Component} from "react";[m
[31m-import {Form, FormGroup, Label, Input, FormFeedback, FormText,[m
[31m-        Col, Row, Container,[m
[31m-        Jumbotron, Button[m
[31m-} from "reactstrap"[m
[32m+[m[32mimport {Form, FormGroup, Input, FormFeedback, FormText, Button} from "reactstrap"[m
 import logo from './images/logo.png'[m
 [m
 class Homepage extends Component {[m
[36m@@ -115,11 +112,11 @@[m [mclass Homepage extends Component {[m
             // className="block-example border border-dark"[m
             <div id="homepage">[m
                [m
[31m-                    <div class="column">[m
[32m+[m[32m                    <div className="column">[m
                         <h1>Infinite Monkey Snippet</h1>[m
                         <img className="main_logo" src={logo} alt="Logo"/>[m
                     </div>[m
[31m-                    <div class="column">[m
[32m+[m[32m                    <div className="column">[m
                         <ul>[m
                         <Form>[m
                             <FormGroup className="input_group">[m
[1mdiff --git a/app/src/components/LangDropDown.js b/app/src/components/LangDropDown.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e5b8d36[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/LangDropDown.js[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32mimport React, {useState} from 'react'[m
[32m+[m[32mimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';[m
[32m+[m
[32m+[m[32mconst LangDropDown = (props) => {[m
[32m+[m[41m    [m
[32m+[m[32m    const [dropdownOpen, setDropdownOpen] = useState(false);[m
[32m+[m[32m    const toggle = () => setDropdownOpen(prevState => !prevState);[m
[32m+[m
[32m+[m[32m    // Languages can be added to list (GUI dropdown will dynamically adjust)[m
[32m+[m[32m    //  -> credits: ACE examples[m
[32m+[m[32m    const languages = [[m
[32m+[m[32m        "javascript",[m
[32m+[m[32m        "java",[m
[32m+[m[32m        "python",[m
[32m+[m[32m        "xml",[m
[32m+[m[32m        "ruby",[m
[32m+[m[32m        "sass",[m
[32m+[m[32m        "markdown",[m
[32m+[m[32m        "mysql",[m
[32m+[m[32m        "json",[m
[32m+[m[32m        "html",[m
[32m+[m[32m        "handlebars",[m
[32m+[m[32m        "golang",[m
[32m+[m[32m        "csharp",[m
[32m+[m[32m        "elixir",[m
[32m+[m[32m        "typescript",[m
[32m+[m[32m        "css"[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    languages.forEach(lang => {[m
[32m+[m[32m        require(`ace-builds/src-noconflict/mode-${lang}`);[m
[32m+[m[32m        require(`ace-builds/src-noconflict/snippets/${lang}`);[m
[32m+[m[32m     });[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <Dropdown isOpen={dropdownOpen} toggle={toggle}>[m
[32m+[m[32m            <DropdownToggle caret>[m
[32m+[m[32m                Language[m
[32m+[m[32m            </DropdownToggle>[m
[32m+[m[32m            <DropdownMenu>[m
[32m+[m[32m                <DropdownItem header>Supported</DropdownItem>[m
[32m+[m[32m                {languages.map((languages, index)=>{[m
[32m+[m[32m                    return <DropdownItem className="languageDropdown" onClick={props.func}>{languages}</DropdownItem>[m
[32m+[m[32m                })}[m
[32m+[m[32m            </DropdownMenu>[m
[32m+[m[32m        </Dropdown>[m
[32m+[m[32m    )[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default LangDropDown;[m
\ No newline at end of file[m
[1mdiff --git a/app/src/components/NavBar.js b/app/src/components/NavBar.js[m
[1mnew file mode 100644[m
[1mindex 0000000..004813f[m
[1m--- /dev/null[m
[1m+++ b/app/src/components/NavBar.js[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mimport React from 'react'[m
[32m+[m[32mimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'[m
[32m+[m[32mimport { faKeyboard,} from '@fortawesome/free-solid-svg-icons'[m
[32m+[m
[32m+[m[32mfunction NavBar() {[m
[32m+[m[32m    // const [click, setClick] = useState(false);[m
[32m+[m[32m    //[m
[32m+[m[32m    // const toggleMenu = () => setClick(!click);[m
[32m+[m[32m    // const goHome = () => {window.open("/", "_self");}[m
[32m+[m
[32m+[m[32m    // Responsive Navbar to scroll[m[41m [m
[32m+[m[32m    //      -waits for document to be loaded[m
[32m+[m[32m    //      -adds scroll event listener[m
[32m+[m[32m    document.addEventListener('DOMContentLoaded', function(){[m
[32m+[m
[32m+[m[32m        window.addEventListener('scroll', responsiveNavBar);[m
[32m+[m[32m        let navbar = document.getElementById('navBar');[m
[32m+[m[32m        let logo = document.getElementById('mainLogo');[m
[32m+[m
[32m+[m[32m        function responsiveNavBar(){[m
[32m+[m[32m            if(window.scrollY > 30){[m
[32m+[m[32m                navbar.style.backgroundColor = "black";[m
[32m+[m[32m                logo.style.color = "white";[m
[32m+[m[32m            }else{[m
[32m+[m[32m                navbar.style.backgroundColor = "#FCCD04";[m
[32m+[m[32m                logo.style.color = "#A63A50";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <>[m
[32m+[m[32m            <div id='navBar' className='navbar'>[m
[32m+[m[32m                <div className='navbar-container'>[m
[32m+[m[32m                    <a id='mainLogo' className='navbar-logo' href='/'>[m
[32m+[m[32m                       <FontAwesomeIcon icon={faKeyboard}/> Infinite Monkey Snippet[m[41m [m
[32m+[m[32m                    </a>[m
[32m+[m[32m                    {/* <div class='menu-icon' onClick={toggleMenu}>[m
[32m+[m[32m                        <FontAwesomeIcon icon={click ? faTimes : faBars} />[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                    <ul class={click ? 'nav-menu active' : 'nav-menu'}>[m
[32m+[m[32m                        <li class='nav-item'>[m
[32m+[m[32m                            <h4 class='homepage' onClick={goHome}>Home</h4>[m
[32m+[m[32m                        </li>[m
[32m+[m[32m                    </ul>*/}[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m[41m  [m
[32m+[m[32m        </>[m
[32m+[m[32m    )[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport default NavBar[m
[1mdiff --git a/app/src/components/Snippet.js b/app/src/components/Snippet.js[m
[1mindex 5137ea1..a8e9d23 100644[m
[1m--- a/app/src/components/Snippet.js[m
[1m+++ b/app/src/components/Snippet.js[m
[36m@@ -1,16 +1,25 @@[m
[31m-import React, {Component} from "react";[m
[31m-import ReactDOM from "react-dom";[m
[32m+[m[32mimport React, {Component, useState} from "react";[m
[32m+[m[32mimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'[m
[32m+[m[32mimport { faGithub, faLinkedin, faInstagram} from '@fortawesome/free-brands-svg-icons'[m
[32m+[m[32mimport { Card, CardTitle, Button} from 'reactstrap';[m
[32m+[m
 import AceEditor from "react-ace";[m
[32m+[m[32mimport NavBar from './NavBar';[m
[32m+[m[32mimport LangDropdown from './LangDropDown';[m
[32m+[m[32mimport CommentList from './CommentList';[m
[32m+[m[32mimport { callLambda, sanitizeText } from "./Utilities";[m
 [m
 import "ace-builds/src-noconflict/mode-java";[m
 import "ace-builds/src-noconflict/theme-monokai";[m
 [m
[32m+[m[32m/** GLOBAL URL **/[m
[32m+[m[32mconst url = "https://22qzx6fqi8.execute-api.us-east-1.amazonaws.com/First/snippets/";[m
 [m
[32m+[m[32m/* ------------------ Main Class ----------------- */[m
 class Snippet extends Component {[m
     constructor(props) {[m
         super(props);[m
 [m
[31m-        const url = "https://22qzx6fqi8.execute-api.us-east-1.amazonaws.com/First/snippets/";[m
         const snippetID = window.location.hash.substring(1);[m
 [m
         let initURL = url + snippetID;[m
[36m@@ -19,15 +28,20 @@[m [mclass Snippet extends Component {[m
             url: initURL,[m
             snippetID: snippetID,[m
             password: "",[m
[31m-            languageText: "",[m
[32m+[m[32m            languageText: "java",[m
             timestampText: "",[m
             info: "",[m
             text: "",[m
 [m
             inputtedPass: "",[m
[32m+[m[32m            comments: [],[m
 [m
[32m+[m[32m            startSelection: 0,[m
[32m+[m[32m            endSelection: 0,[m
         };[m
 [m
[32m+[m[32m        this.setLanguage = this.setLanguage.bind(this);[m
[32m+[m
         this.infoChanged = this.infoChanged.bind(this);[m
         this.textChanged = this.textChanged.bind(this);[m
 [m
[36m@@ -39,138 +53,24 @@[m [mclass Snippet extends Component {[m
     }[m
 [m
     componentDidMount() {[m
[31m-        let extThis = this;[m
[31m-        console.log(this.state.url);[m
[31m-        let xhr = new XMLHttpRequest();[m
[31m-        xhr.open("GET", this.state.url, true);[m
[31m-[m
[31m-        //send data as JSON[m
[31m-        xhr.send();[m
[31m-[m
[31m-        // Process the response an update GUI[m
[31m-        xhr.onloadend = function() {[m
[31m-            console.log(xhr);[m
[31m-            if(xhr.readyState === XMLHttpRequest.DONE){[m
[31m-                if(xhr.status === 200){[m
[31m-                    console.log("XHR: " + xhr.responseText);[m
[31m-                    let jsonResponse = JSON.parse(xhr.responseText);[m
[31m-                    console.log(jsonResponse);[m
[31m-[m
[31m-                    let timestampNum = jsonResponse["timestamp"];[m
[31m-                    let unixDate = new Date(timestampNum);[m
[31m-[m
[31m-                    extThis.setState({[m
[31m-                        password: jsonResponse["password"],[m
[31m-                        languageText: jsonResponse["language"],[m
[31m-                        timestampText: unixDate.toLocaleString(),[m
[31m-                        info: jsonResponse["info"],[m
[31m-                        text: jsonResponse["text"],[m
[31m-                    });[m
[31m-[m
[31m-                }[m
[31m-                else if(xhr.status === 400){[m
[31m-                    alert("Unable to get Snippet");[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    static textToDB(textURL, fieldName, snipText, password="") {[m
[31m-        const backspace = String.fromCharCode(8);[m
[31m-        const formfeed = String.fromCharCode(12);[m
[31m-        const newline = String.fromCharCode(10);[m
[31m-        const carriage = String.fromCharCode(13);[m
[31m-        const tab = String.fromCharCode(9);[m
[31m-        const quote = String.fromCharCode(34);[m
[31m-        const backslash = String.fromCharCode(92);[m
[31m-[m
[31m-        let cursedArray = [backslash, backspace, formfeed, newline, carriage, tab, quote];[m
[31m-        let blessedArray = ['\\', '\\b', '\\f', '\\n', '\\r', '\\t', '\\"'][m
[31m-[m
[31m-        snipText = snipText.replace(/[\x5c\x08\x0c\x0a\x0d\x09\x22]/g, function(x) {[m
[31m-            let i = cursedArray.indexOf(x);[m
[31m-[m
[31m-            return blessedArray[i];[m
[31m-        });[m
[31m-[m
[31m-        let data = {};[m
[31m-[m
[31m-        data[fieldName] = snipText;[m
[31m-[m
[31m-        if (fieldName === "info") {[m
[31m-            data["password"] = password;[m
[31m-        }[m
[31m-[m
[31m-        let json = JSON.stringify(data);[m
[31m-[m
[31m-        let xhr = new XMLHttpRequest();[m
[31m-        xhr.open("POST", textURL, true);[m
[31m-[m
[31m-        console.log("JSON: " + json);[m
[31m-        console.log(textURL);[m
[31m-[m
[31m-        xhr.setRequestHeader("Content-Type", "application/json");[m
[31m-[m
[31m-        //send data as JSON[m
[31m-        xhr.send(json);[m
[31m-[m
[31m-        // Process the response an update GUI[m
[31m-        xhr.onloadend = function() {[m
[31m-            console.log(xhr);[m
[31m-            if(xhr.readyState === XMLHttpRequest.DONE){[m
[31m-                if(xhr.status === 200){[m
[31m-                    console.log("XHR: " + xhr.responseText);[m
[31m-                    let jsonResponse = JSON.parse(xhr.responseText);[m
[31m-                    console.log(jsonResponse);[m
[31m-                }[m
[31m-                else if(xhr.status === 404){[m
[31m-                    alert("Unable to update" + fieldName);[m
[31m-                }[m
[31m-            } else {[m
[31m-                console.log("Didn't processes");[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    deleteSnippet(event) {[m
[31m-        let textURL = this.state.url + "/deleteSnippet"[m
[31m-[m
[31m-        let data = {};[m
[31m-[m
[31m-        data["password"] = this.state.inputtedPass;[m
[31m-        let json = JSON.stringify(data);[m
[31m-[m
[31m-        let xhr = new XMLHttpRequest();[m
[31m-        xhr.open("POST", textURL, true);[m
[31m-[m
[31m-        console.log("JSON: " + json);[m
[31m-        console.log(textURL);[m
[31m-[m
[31m-        xhr.setRequestHeader("Content-Type", "application/json");[m
[31m-[m
[31m-        //send data as JSON[m
[31m-        xhr.send(json);[m
[31m-[m
[31m-        // Process the response an update GUI[m
[31m-        xhr.onloadend = function() {[m
[31m-            console.log(xhr);[m
[31m-            if(xhr.readyState === XMLHttpRequest.DONE){[m
[31m-                if(xhr.status === 200){[m
[31m-                    console.log("XHR: " + xhr.responseText);[m
[31m-                    let jsonResponse = JSON.parse(xhr.responseText);[m
[31m-                    console.log(jsonResponse);[m
 [m
[31m-                    window.open("/", "_self");[m
[31m-                }[m
[31m-                else if(xhr.status === 404){[m
[31m-                    alert("Unable to delete Snippet");[m
[31m-                }[m
[31m-            } else {[m
[31m-                console.log("Didn't processes");[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        event.preventDefault();[m
[32m+[m[32m        // GET SNIPPET DATA[m
[32m+[m[32m        callLambda(this, this.state.url, "GET")[m
[32m+[m[32m            .then(response => {[m
[32m+[m[32m                let timestampNum = response["timestamp"];[m
[32m+[m[32m                let unixDate = new Date(timestampNum);[m
[32m+[m
[32m+[m[32m                this.setState({[m
[32m+[m[32m                    password: response["password"],[m
[32m+[m[32m                    languageText: response["language"].toString(),[m
[32m+[m[32m                    timestampText: unixDate.toLocaleString(),[m
[32m+[m[32m                    info: response["info"],[m
[32m+[m[32m                    text: response["text"],[m
[32m+[m[32m                });[m
[32m+[m[32m            })[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
     }[m
 [m
     editInfo(event) {[m
[36m@@ -178,6 +78,7 @@[m [mclass Snippet extends Component {[m
 [m
         let extThis = this;[m
 [m
[32m+[m[32m        // TODO this is bad bad should be done in the backend[m
         if (promptResp === this.state.password) {[m
             this.setState({[m
                 inputtedPass: promptResp,[m
[36m@@ -229,11 +130,49 @@[m [mclass Snippet extends Component {[m
     }[m
 [m
     infoSubmit(event) {[m
[31m-        Snippet.textToDB(this.state.url + "/updateInfo", "info", this.state.info, this.state.inputtedPass);[m
[32m+[m[32m        let infoText = sanitizeText(this.state.info);[m
[32m+[m
[32m+[m[32m        let data = {};[m
[32m+[m[32m        data["info"] = infoText;[m
[32m+[m[32m        callLambda(this, this.state.url + "/updateInfo", "POST",  data, this.state.inputtedPass)[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
     }[m
 [m
     textSubmit(event) {[m
[31m-        Snippet.textToDB(this.state.url + "/updateText", "text", this.state.text);[m
[32m+[m[32m        let textText = sanitizeText(this.state.text);[m
[32m+[m
[32m+[m[32m        let data = {};[m
[32m+[m[32m        data["text"] = textText;[m
[32m+[m[32m        callLambda(this, this.state.url + "/updateText", "POST", data)[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    deleteSnippet(event) {[m
[32m+[m[32m        let delURL = this.state.url + "/deleteSnippet"[m
[32m+[m[32m        callLambda(this, delURL, "POST", {}, this.state.inputtedPass)[m
[32m+[m[32m            .then(response => {[m
[32m+[m[32m                if (response !== null) {[m
[32m+[m[32m                    window.open("/", "_self");[m
[32m+[m[32m                }[m
[32m+[m[32m            })[m
[32m+[m[32m            .catch(error => {[m
[32m+[m[32m                console.log(error);[m
[32m+[m[32m            });[m
[32m+[m
[32m+[m[32m        event.preventDefault();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Set language from dropdown select[m
[32m+[m[32m    setLanguage(event){[m
[32m+[m[32m        let lang = event.currentTarget.textContent;[m
[32m+[m[32m        console.log("Language selected:" + lang);[m
[32m+[m[32m        this.setState({[m
[32m+[m[32m            languageText : lang,[m
[32m+[m[32m        });[m
     }[m
 [m
     render() {[m
[36m@@ -242,20 +181,16 @@[m [mclass Snippet extends Component {[m
               borderRadius: "10px",[m
               padding: "0.5em",[m
           }[m
[31m-        };[m
[32m+[m[32m        };[m[41m [m
 [m
         return ([m
[32m+[m[32m            <>[m
[32m+[m[32m            <NavBar/>[m
             <div id="snippetpage">[m
                 <div className="column">[m
[31m-                    <div className="snippetsection">[m
[31m-                        <div className="header">[m
[31m-                            <h1>Infinite Monkey Snippet</h1>[m
[31m-                            <h2 id="snippetId">Snippet ID: {this.state.snippetID}</h2>[m
[31m-                        </div>[m
[31m-                    </div>[m
                     <div className="snippetsection">[m
                         <div id="infoDiv" className="leftCol">[m
[31m-                            <h5>Info:</h5>[m
[32m+[m[32m                            <h2 className="infoTitle">Snippet Information:</h2>[m
                             <br/>[m
                             <form id="infoForm">[m
                                 <p id="infoArea">{this.state.info}</p>[m
[36m@@ -264,18 +199,31 @@[m [mclass Snippet extends Component {[m
  